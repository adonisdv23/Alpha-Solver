name: tests
on:
  push:
    branches: [ main ]
  pull_request:
permissions:
  contents: read
jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.12'
      - name: Cache pip
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('requirements.txt', 'constraints.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-
      - name: Install deps
        run: |
          python -m pip install -U pip
          pip install -r requirements.txt -c constraints.txt
          pip install pytest pytest-cov -c constraints.txt
      - name: Sanity â€“ imports and versions
        run: |
          python - <<'PY'
          import fastapi, starlette, pydantic, httpx, uvicorn
          print("OK:", fastapi.__version__, starlette.__version__, pydantic.__version__, httpx.__version__, uvicorn.__version__)
          PY
      - name: Preflight
        run: python scripts/preflight.py > preflight.json
      - uses: actions/upload-artifact@v4
        with:
          name: preflight
          path: preflight.json
      - env:
          PYTHONPATH: .
        run: python -m pytest -q
      - name: Smoke test (FastAPI TestClient)
        run: |
          python - <<'PY'
          from fastapi.testclient import TestClient
          from service.app import app
          app.state.config.api_key='dev-secret'
          c = TestClient(app)
          assert c.get('/openapi.json').status_code == 200
          r = c.post('/v1/solve', headers={'X-API-Key':'dev-secret'}, json={'query':'2+2','strategy':'react'})
          assert r.status_code == 200, r.text
          j = r.json()
          assert 'final_answer' in j
          print('SMOKE OK', j.get('final_answer','')[:80])
          PY
      - name: Check release notes parse
        run: python scripts/gen_release_notes.py --check
        continue-on-error: true
      - name: Packaging smoke build (non-blocking)
        if: always()
        run: |
          python -m pip install -U pip
          pip install build -c constraints.txt
          python -m build
        continue-on-error: true
      - if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: test-artifacts
          path: |
            artifacts/**
            tests/**/diff*.txt
